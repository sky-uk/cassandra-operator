#!/usr/bin/env bash
set -e

snapshots_file=/tmp/snapshots

args=("$@")
action_argument=

for (( x=0; x<$#; x++ )); do
    if [[ "${args[x]}" =~ ^(version|status|snapshot|listsnapshots|clearsnapshot|drain)$ ]];
    then
        action_argument=$x
        break
    fi
done

case "${args[action_argument]}" in
 "version")
    echo "ReleaseVersion: 3.11"
    ;;
 "status")
    echo "UN ${NODE_LISTEN_ADDRESS}"
    ;;
 "snapshot")
    snapshot_name_arg=${action_argument+2}
    snapshot_name="${args[action_argument + 2]}"
    shift ${snapshot_name_arg+5}
    keyspace_list=$@
    if [ -z "${keyspace_list}" ]; then
        keyspace_list="system_auth system_traces system_distributed"
        echo "Requested creating snapshot(s) for [all keyspaces] with snapshot name [$snapshot_name]"
    else
        echo "Requested creating snapshot(s) for [$(echo ${keyspace_list} | sed 's/ /, /g')] with snapshot name [$snapshot_name]"
    fi

    for keyspace in ${keyspace_list}; do
        echo "${snapshot_name} ${keyspace} mytable 0 bytes 0 bytes" >> ${snapshots_file}
    done
    ;;
 "listsnapshots")
    if [ -e ${snapshots_file} ]; then
        cat ${snapshots_file}
    else
        echo "There are no snapshots"
    fi
    ;;
 "clearsnapshot")
    snapshot_name="${args[action_argument + 2]}"
    keyspace="${args[action_argument + 4]}"
    if [ -n "${keyspace}" ]; then
        if [ -e ${snapshots_file} ]; then
            sed -i "/$snapshot_name $keyspace /d" ${snapshots_file}
        fi
    else
        rm -f ${snapshots_file}
    fi
    ;;
 "drain")
    echo "Draining cassandra node"
    ;;
  *)
    echo "No defined nodetool arguments were passed into fake-nodetool"
    exit 1
    ;;
esac
